name: GitHub Actions CI

on:
  push:
    branches: master
  pull_request: []

env:
  HOMEBREW_DEVELOPER: 1
  HOMEBREW_GITHUB_ACTIONS: 1
  HOMEBREW_NO_AUTO_UPDATE: 1

concurrency:
  group: "tests-${{ github.ref }}"
  cancel-in-progress: ${{ github.event_name == 'pull_request' }}

permissions:
  contents: read

jobs:
  tap_syntax:
    if: github.repository == 'maxim-belkin/homebrew-xorg'
    runs-on: ubuntu-22.04
    container:
      image: ghcr.io/homebrew/ubuntu22.04:master
    steps:
      - name: Set up Homebrew
        id: set-up-homebrew
        uses: Homebrew/actions/setup-homebrew@master

      - run: brew test-bot --only-tap-syntax

  tests:
    needs: tap_syntax
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/homebrew/ubuntu22.04:master
      options: --user=linuxbrew
    defaults:
      run:
        shell: /bin/bash -e {0}
        working-directory: ${{github.workspace}}
    env:
      GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
      HOMEBREW_GITHUB_API_TOKEN: ${{secrets.GITHUB_TOKEN}}
    steps:
      - name: Install xvfb
        run: |
          sudo apt-get update
          sudo apt-get install --no-install-recommends -y xvfb

      - name: Set up Homebrew
        id: set-up-homebrew
        uses: Homebrew/actions/setup-homebrew@master

      - run: brew test-bot --only-cleanup-before

      - run: brew test-bot --only-setup

      - name: Run brew test-bot --only-formulae
        env:
          DISPLAY: ":0"
        run: |
          mkdir bottles
          cd bottles
          xvfb-run -s "-ac" \
          brew test-bot \
            --only-formulae \
            --tap=maxim-belkin/xorg \
            --skip-recursive-dependents

      - name: Failures summary for brew test-bot --only-formulae
        if: always()
        uses: Homebrew/actions/failures-summary-and-bottle-result@master
        with:
          workdir: ${{github.workspace}}
          result_path: bottles/steps_output.txt
          step_name: 'Build summary'

      - name: Output brew linkage result
        if: always()
        uses: Homebrew/actions/failures-summary-and-bottle-result@master
        with:
          workdir: ${{github.workspace}}
          result_path: bottles/linkage_output.txt
          step_name: '`brew linkage` output'
          collapse: 'true'

      - name: Output brew bottle result
        if: always()
        uses: Homebrew/actions/failures-summary-and-bottle-result@master
        with:
          workdir: ${{github.workspace}}
          result_path: bottles/bottle_output.txt
          step_name: '`brew bottle` output'
          collapse: 'true'


      - name: Upload logs
        if: always()
        uses: actions/upload-artifact@main
        with:
          name: logs-${{ matrix.runner }}
          path: ${{github.workspace}}/bottles/logs

      - name: Delete logs and home
        if: always()
        run: |
          rm -rvf bottles/logs
          rm -rvf bottles/home

      - name: Count bottles
        id: bottles
        if: always()
        run: |
          cd bottles
          count=$(ls *.json | wc -l | xargs echo -n)
          echo "$count bottles"
          echo "::set-output name=count::$count"
          failures=$(ls failed/*.json | wc -l | xargs echo -n)
          echo "$failures failed bottles"
          echo "::set-output name=failures::$failures"

      - name: Upload failed bottles
        if: always() && steps.bottles.outputs.failures > 0
        uses: actions/upload-artifact@main
        with:
          name: bottles-${{ matrix.runner }}
          path: ${{matrix.workdir || github.workspace}}/bottles/failed

      # Must be run before the `Upload bottles` step so that failed
      # bottles are not included in the `bottles` artifact.
      - name: Delete failed bottles
        if: always()
        run: rm -rvf bottles/failed

      - name: Upload bottles
        if: always() && steps.bottles.outputs.count > 0
        uses: actions/upload-artifact@main
        with:
          name: bottles
          path: ${{github.workspace}}/bottles
